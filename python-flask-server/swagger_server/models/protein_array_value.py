# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.protein_array_value_protein import ProteinArrayValueProtein  # noqa: F401,E501
from swagger_server import util


class ProteinArrayValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, protein: ProteinArrayValueProtein=None, depmap_id: str=None, value: float=None):  # noqa: E501
        """ProteinArrayValue - a model defined in Swagger

        :param protein: The protein of this ProteinArrayValue.  # noqa: E501
        :type protein: ProteinArrayValueProtein
        :param depmap_id: The depmap_id of this ProteinArrayValue.  # noqa: E501
        :type depmap_id: str
        :param value: The value of this ProteinArrayValue.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'protein': ProteinArrayValueProtein,
            'depmap_id': str,
            'value': float
        }

        self.attribute_map = {
            'protein': 'protein',
            'depmap_id': 'depmap_id',
            'value': 'value'
        }

        self._protein = protein
        self._depmap_id = depmap_id
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ProteinArrayValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The protein_array_value of this ProteinArrayValue.  # noqa: E501
        :rtype: ProteinArrayValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protein(self) -> ProteinArrayValueProtein:
        """Gets the protein of this ProteinArrayValue.


        :return: The protein of this ProteinArrayValue.
        :rtype: ProteinArrayValueProtein
        """
        return self._protein

    @protein.setter
    def protein(self, protein: ProteinArrayValueProtein):
        """Sets the protein of this ProteinArrayValue.


        :param protein: The protein of this ProteinArrayValue.
        :type protein: ProteinArrayValueProtein
        """

        self._protein = protein

    @property
    def depmap_id(self) -> str:
        """Gets the depmap_id of this ProteinArrayValue.


        :return: The depmap_id of this ProteinArrayValue.
        :rtype: str
        """
        return self._depmap_id

    @depmap_id.setter
    def depmap_id(self, depmap_id: str):
        """Sets the depmap_id of this ProteinArrayValue.


        :param depmap_id: The depmap_id of this ProteinArrayValue.
        :type depmap_id: str
        """

        self._depmap_id = depmap_id

    @property
    def value(self) -> float:
        """Gets the value of this ProteinArrayValue.


        :return: The value of this ProteinArrayValue.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this ProteinArrayValue.


        :param value: The value of this ProteinArrayValue.
        :type value: float
        """

        self._value = value
