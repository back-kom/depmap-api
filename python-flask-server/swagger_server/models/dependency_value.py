# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DependencyValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, entrez_gene_id: int=None, depmap_id: str=None, value: float=None):  # noqa: E501
        """DependencyValue - a model defined in Swagger

        :param entrez_gene_id: The entrez_gene_id of this DependencyValue.  # noqa: E501
        :type entrez_gene_id: int
        :param depmap_id: The depmap_id of this DependencyValue.  # noqa: E501
        :type depmap_id: str
        :param value: The value of this DependencyValue.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'entrez_gene_id': int,
            'depmap_id': str,
            'value': float
        }

        self.attribute_map = {
            'entrez_gene_id': 'entrez_gene_id',
            'depmap_id': 'depmap_id',
            'value': 'value'
        }

        self._entrez_gene_id = entrez_gene_id
        self._depmap_id = depmap_id
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'DependencyValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The dependency_value of this DependencyValue.  # noqa: E501
        :rtype: DependencyValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entrez_gene_id(self) -> int:
        """Gets the entrez_gene_id of this DependencyValue.


        :return: The entrez_gene_id of this DependencyValue.
        :rtype: int
        """
        return self._entrez_gene_id

    @entrez_gene_id.setter
    def entrez_gene_id(self, entrez_gene_id: int):
        """Sets the entrez_gene_id of this DependencyValue.


        :param entrez_gene_id: The entrez_gene_id of this DependencyValue.
        :type entrez_gene_id: int
        """

        self._entrez_gene_id = entrez_gene_id

    @property
    def depmap_id(self) -> str:
        """Gets the depmap_id of this DependencyValue.


        :return: The depmap_id of this DependencyValue.
        :rtype: str
        """
        return self._depmap_id

    @depmap_id.setter
    def depmap_id(self, depmap_id: str):
        """Sets the depmap_id of this DependencyValue.


        :param depmap_id: The depmap_id of this DependencyValue.
        :type depmap_id: str
        """

        self._depmap_id = depmap_id

    @property
    def value(self) -> float:
        """Gets the value of this DependencyValue.


        :return: The value of this DependencyValue.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this DependencyValue.


        :param value: The value of this DependencyValue.
        :type value: float
        """

        self._value = value
